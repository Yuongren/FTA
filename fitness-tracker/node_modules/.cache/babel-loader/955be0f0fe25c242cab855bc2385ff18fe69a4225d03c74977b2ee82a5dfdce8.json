{"ast":null,"code":"var _jsxFileName = \"/home/student/Documents/Class/FTA/fitness-tracker/src/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation after login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Initialize navigate\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!email || !password) {\n      setError('Please enter both email and password');\n      return;\n    }\n\n    // Log the input values to check\n    console.log('Email:', email);\n    console.log('Password:', password);\n\n    // Simulate API call for login (replace this with your actual API call)\n    const mockUser = {\n      email: 'test@example.com',\n      password: 'password123'\n    };\n    if (email === mockUser.email && password === mockUser.password) {\n      setError('');\n      navigate('/dashboard');\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value) // Ensure email state is updated\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Ensure password state is updated\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","mockUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/student/Documents/Class/FTA/fitness-tracker/src/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation after login\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Initialize navigate\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    // Basic validation\n    if (!email || !password) {\n      setError('Please enter both email and password');\n      return;\n    }\n  \n    // Log the input values to check\n    console.log('Email:', email);\n    console.log('Password:', password);\n  \n    // Simulate API call for login (replace this with your actual API call)\n    const mockUser = { email: 'test@example.com', password: 'password123' };\n  \n    if (email === mockUser.email && password === mockUser.password) {\n      setError('');\n      navigate('/dashboard');\n    } else {\n      setError('Invalid email or password');\n    }      \n  };\n  ;\n\n  return (\n    <div className=\"login-form\">\n      <h2>Login</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Error message */}\n      <form onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)} // Ensure email state is updated\n        required\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)} // Ensure password state is updated\n        required\n      />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}